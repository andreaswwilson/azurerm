---
name: Deploy Terraform

on:
  workflow_dispatch:
    inputs:
      terraform_operation:
        description: "Terraform operation: apply or destroy"
        required: true
        default: "apply"
        type: choice
        options:
          - apply
          - destroy
  push:
    branches:
      - main

env:
  TF_LOG: INFO

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    env:
      STORAGE_ACCOUNT: ${{ vars.STORAGE_ACCOUNT }}
      CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
      RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}
      ARM_CLIENT_ID: ${{ vars.CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.TENANT_ID }}
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # Log into Azure with OIDC integration
      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ vars.CLIENT_ID }}
          subscription-id: ${{ vars.SUBSCRIPTION_ID}}
          tenant-id: ${{ vars.TENANT_ID}}

      # Run az commands to confirm sub access
      - name: "Run az commands"
        run: |
          az account show

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -no-color
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -input=false -no-color -out tf.plan
        continue-on-error: false

      - name: Terraform Apply
        id: apply
        if: ${{ github.ref == 'refs/heads/main' && github.event.inputs.terraform_operation == 'apply' }}
        run: terraform apply -input=false tf.plan

      - name: Terraform destroy
        run: terraform destroy --auto-approve
        if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"
